// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: nufvo23EJ9AYcWXG5ppmCa
// Component: ZQw00dWBpoLbaX

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Offer1 from "../../Offer1"; // plasmic-import: tIy_v0PVRisw56/component
import Collection1 from "../../Collection1"; // plasmic-import: _ePJquMzW8mMEg/component
import Collection1Cta from "../../Collection1Cta"; // plasmic-import: _J7qP3siszdpBj/component
import Collection12 from "../../Collection12"; // plasmic-import: L_Do75x7nPR-ad/component
import CwAdvert2 from "../../CwAdvert2"; // plasmic-import: UsYWXw6QCqj7Ct3/component

import { useScreenVariants as useScreenVariantsrolQiFvOio8R1Y } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ROLQiFvOIO8r1y/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_copy_of_lhp_3_30_23.module.css"; // plasmic-import: nufvo23EJ9AYcWXG5ppmCa/projectcss
import sty from "./PlasmicCollection6.module.css"; // plasmic-import: ZQw00dWBpoLbaX/css

export type PlasmicCollection6__VariantMembers = {};
export type PlasmicCollection6__VariantsArgs = {};
type VariantPropType = keyof PlasmicCollection6__VariantsArgs;
export const PlasmicCollection6__VariantProps = new Array<VariantPropType>();

export type PlasmicCollection6__ArgsType = {};
type ArgPropType = keyof PlasmicCollection6__ArgsType;
export const PlasmicCollection6__ArgProps = new Array<ArgPropType>();

export type PlasmicCollection6__OverridesType = {
  root?: p.Flex<"div">;
  logo2?: p.Flex<typeof p.PlasmicImg>;
  logo?: p.Flex<typeof p.PlasmicImg>;
  hiconsH1?: p.Flex<"div">;
  hiconsIcon1?: p.Flex<typeof p.PlasmicImg>;
  hiconsLabel1?: p.Flex<"div">;
  hiconsIcon2?: p.Flex<typeof p.PlasmicImg>;
  hiconsLabel2?: p.Flex<"div">;
  hiconsIcon3?: p.Flex<typeof p.PlasmicImg>;
  hiconsIcon4?: p.Flex<"div">;
  hiconsIcon5?: p.Flex<typeof p.PlasmicImg>;
  hiconsIcon6?: p.Flex<"div">;
  offer?: p.Flex<"div">;
  offer1?: p.Flex<typeof Offer1>;
  offerImage?: p.Flex<typeof p.PlasmicImg>;
  offerVariant1Url?: p.Flex<"a"> & Partial<LinkProps>;
  offerVariant1Image?: p.Flex<typeof p.PlasmicImg>;
  offerVariant1Label?: p.Flex<"div">;
  offerVariant2Url?: p.Flex<"a"> & Partial<LinkProps>;
  offerVariant2Image?: p.Flex<typeof p.PlasmicImg>;
  offerVariant2Label?: p.Flex<"div">;
  offerH1?: p.Flex<"div">;
  offerH2?: p.Flex<"div">;
  offerParagraph?: p.Flex<"div">;
  offerCta?: p.Flex<"div">;
  products?: p.Flex<"div">;
  collection12?: p.Flex<typeof Collection12>;
  cwAdvert2?: p.Flex<typeof CwAdvert2>;
};

export interface DefaultCollection6Props {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCollection6__RenderFunc(props: {
  variants: PlasmicCollection6__VariantsArgs;
  args: PlasmicCollection6__ArgsType;
  overrides: PlasmicCollection6__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsrolQiFvOio8R1Y()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicCollection6.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicCollection6.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicCollection6.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicCollection6.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicCollection6.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicCollection6.pageMetadata.description}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__k6HCk)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eLNsK
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"FREE SHIPPING ON ORDERS OVER $65"}
                  </span>
                </React.Fragment>
              </div>
            </div>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__vlfUt)}>
              <div className={classNames(projectcss.all, sty.freeBox__rh05)}>
                {true ? (
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fgHar
                    )}
                    component={Link}
                    href={"https://www.sparqlife.com/discount/QUIT15" as const}
                    platform={"nextjs"}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__m9COa
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15" as const
                        }
                        platform={"nextjs"}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__iet5W)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"13px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/navsvg.svg",
                            fullWidth: 102,
                            fullHeight: 150,
                            aspectRatio: 0.677419
                          }}
                        />
                      </p.PlasmicLink>
                    ) : null}
                    <p.PlasmicImg
                      data-plasmic-name={"logo2"}
                      data-plasmic-override={overrides.logo2}
                      alt={""}
                      className={classNames(sty.logo2)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"50px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"125px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/logopng.png",
                        fullWidth: 276,
                        fullHeight: 46,
                        aspectRatio: undefined
                      }}
                    />

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__yPbF
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15?redirect=/collections/rechargeable" as const
                        }
                        platform={"nextjs"}
                      >
                        {"RECHARGABLE"}
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__caLvP
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15?redirect=/collections/all" as const
                        }
                        platform={"nextjs"}
                      >
                        {"DISPOSABLE"}
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__c253X
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15?redirect=/collections/volume-buying" as const
                        }
                        platform={"nextjs"}
                      >
                        {"BULK BUYING"}
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link___8SSu3
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15?redirect=/pages/our-story" as const
                        }
                        platform={"nextjs"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"AUTO-SHIP"}
                          </span>
                        </React.Fragment>
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link___7KTwp
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15?redirect=/pages/pod-subscription" as const
                        }
                        platform={"nextjs"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"ABOUT"}
                          </span>
                        </React.Fragment>
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__oumkE
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/discount/QUIT15?redirect=/pages/loyalty-referral-program" as const
                        }
                        platform={"nextjs"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"REWARDS"}
                          </span>
                        </React.Fragment>
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__yMapx
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/account/login" as const
                        }
                        platform={"nextjs"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"LOGIN"}
                          </span>
                        </React.Fragment>
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__snAu1
                        )}
                        component={Link}
                        href={
                          "https://www.sparqlife.com/account/register" as const
                        }
                        platform={"nextjs"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"LOGIN"}
                          </span>
                        </React.Fragment>
                      </p.PlasmicLink>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__v6OHi
                        )}
                        component={Link}
                        href={"https://www.sparqlife.com/cart" as const}
                        platform={"nextjs"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#93896A" }}
                          >
                            {"CART"}
                          </span>
                        </React.Fragment>
                      </p.PlasmicLink>
                    ) : null}
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__af2Hq
                      )}
                      component={Link}
                      href={"https://www.sparqlife.com/cart" as const}
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__xhQdj)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"13px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/cartsvg.svg",
                          fullWidth: 134,
                          fullHeight: 150,
                          aspectRatio: 0.894737
                        }}
                      />
                    </p.PlasmicLink>
                  </p.PlasmicLink>
                ) : null}
              </div>
            </div>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__bxRxx)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__fdTit
                )}
                component={Link}
                href={"https://shop.lifehacksplus.com/discount/QUIT15" as const}
                platform={"nextjs"}
              >
                <p.PlasmicImg
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  alt={""}
                  className={classNames(sty.logo)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"50px" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/logopng.png",
                    fullWidth: 276,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </p.PlasmicLink>
            </div>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__clu2W)}>
              <div
                data-plasmic-name={"hiconsH1"}
                data-plasmic-override={overrides.hiconsH1}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.hiconsH1
                )}
              >
                {(() => {
                  try {
                    return $ctx.fetchDyanamicData.records[0].fields.hicons_h1;
                  } catch (e) {
                    if (e instanceof TypeError) {
                      return "BREATHE VITAMIN AIR®";
                    }
                    throw e;
                  }
                })()}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__f1Ii)}>
                <div className={classNames(projectcss.all, sty.freeBox__tFaU0)}>
                  <p.PlasmicImg
                    data-plasmic-name={"hiconsIcon1"}
                    data-plasmic-override={overrides.hiconsIcon1}
                    alt={""}
                    className={classNames(sty.hiconsIcon1)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    loading={"lazy" as const}
                    src={(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_icon1[0].url;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "https://site-assets.plasmic.app/6e42147b488b5ca87759208eede507e2.png";
                        }
                        throw e;
                      }
                    })()}
                  />

                  <div
                    data-plasmic-name={"hiconsLabel1"}
                    data-plasmic-override={overrides.hiconsLabel1}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.hiconsLabel1
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_label_1;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "0% Nicotine";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__mT5Q)}>
                  <p.PlasmicImg
                    data-plasmic-name={"hiconsIcon2"}
                    data-plasmic-override={overrides.hiconsIcon2}
                    alt={""}
                    className={classNames(sty.hiconsIcon2)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    loading={"lazy" as const}
                    src={(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_icon_2[0].url;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "https://site-assets.plasmic.app/9d995ea0affc51c4faaeacafd85b5294.png";
                        }
                        throw e;
                      }
                    })()}
                  />

                  <div
                    data-plasmic-name={"hiconsLabel2"}
                    data-plasmic-override={overrides.hiconsLabel2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.hiconsLabel2
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_label_2;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "Lab-Tested";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___9JVqb)}
                >
                  <p.PlasmicImg
                    data-plasmic-name={"hiconsIcon3"}
                    data-plasmic-override={overrides.hiconsIcon3}
                    alt={""}
                    className={classNames(sty.hiconsIcon3)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    loading={"lazy" as const}
                    src={(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_icon_3[0].url;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "https://site-assets.plasmic.app/c7ff4dd82964e5ed55ed8e02cffad8aa.png";
                        }
                        throw e;
                      }
                    })()}
                  />

                  <div
                    data-plasmic-name={"hiconsIcon4"}
                    data-plasmic-override={overrides.hiconsIcon4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.hiconsIcon4
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_label_3;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "Vitamins";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__xfHtt)}>
                  <p.PlasmicImg
                    data-plasmic-name={"hiconsIcon5"}
                    data-plasmic-override={overrides.hiconsIcon5}
                    alt={""}
                    className={classNames(sty.hiconsIcon5)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("45px" as const)
                    }
                    loading={"lazy" as const}
                    src={(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_icon_4[0].url;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "https://site-assets.plasmic.app/5c825a2405e0e04e2cec44d1082488b6.png";
                        }
                        throw e;
                      }
                    })()}
                  />

                  <div
                    data-plasmic-name={"hiconsIcon6"}
                    data-plasmic-override={overrides.hiconsIcon6}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.hiconsIcon6
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .hicons_label_4;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "Recyclable";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                </div>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"offer"}
              data-plasmic-override={overrides.offer}
              className={classNames(projectcss.all, sty.offer)}
            >
              <Offer1
                data-plasmic-name={"offer1"}
                data-plasmic-override={overrides.offer1}
                className={classNames("__wab_instance", sty.offer1)}
                slot={
                  <React.Fragment>
                    <p.PlasmicLink
                      data-plasmic-name={"offerVariant1Url"}
                      data-plasmic-override={overrides.offerVariant1Url}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.offerVariant1Url
                      )}
                      component={Link}
                      href={
                        "https://shop.lifehacksplus.com/discount/FREE?redirect=/cart/39394788108:1,39394868748:1,39394817036:1?note=LHP-cw-offer-widget" as const
                      }
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        data-plasmic-name={"offerVariant1Image"}
                        data-plasmic-override={overrides.offerVariant1Image}
                        alt={""}
                        className={classNames(sty.offerVariant1Image)}
                        displayHeight={"60px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"60px" as const}
                        loading={"lazy" as const}
                        src={(() => {
                          try {
                            return $ctx.fetchDyanamicData.records[0].fields
                              .offer_variant_image1[0].url;
                          } catch (e) {
                            if (e instanceof TypeError) {
                              return "https://site-assets.plasmic.app/c63d1d2e518b2d80727ede4d7588f173.svg";
                            }
                            throw e;
                          }
                        })()}
                      />
                    </p.PlasmicLink>
                    <div
                      data-plasmic-name={"offerVariant1Label"}
                      data-plasmic-override={overrides.offerVariant1Label}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.offerVariant1Label
                      )}
                    >
                      {(() => {
                        try {
                          return $ctx.fetchDyanamicData.records[0].fields
                            .offer_variant_label1;
                        } catch (e) {
                          if (e instanceof TypeError) {
                            return "Strawberry";
                          }
                          throw e;
                        }
                      })()}
                    </div>
                  </React.Fragment>
                }
                slot2={
                  <React.Fragment>
                    <p.PlasmicLink
                      data-plasmic-name={"offerVariant2Url"}
                      data-plasmic-override={overrides.offerVariant2Url}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.offerVariant2Url
                      )}
                      component={Link}
                      href={
                        "https://shop.lifehacksplus.com/discount/FREE?redirect=/cart/39394788236:1,39394868940:1,39394817164:1?discount=FREE&note=LHP-cw-offer-widget" as const
                      }
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        data-plasmic-name={"offerVariant2Image"}
                        data-plasmic-override={overrides.offerVariant2Image}
                        alt={""}
                        className={classNames(sty.offerVariant2Image)}
                        displayHeight={"60px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"60px" as const}
                        loading={"lazy" as const}
                        src={(() => {
                          try {
                            return $ctx.fetchDyanamicData.records[0].fields
                              .offer_variant_image2[0].url;
                          } catch (e) {
                            if (e instanceof TypeError) {
                              return "https://site-assets.plasmic.app/eac11844e4f24b6cdb55891eb5d2951d.svg";
                            }
                            throw e;
                          }
                        })()}
                      />
                    </p.PlasmicLink>
                    <div
                      data-plasmic-name={"offerVariant2Label"}
                      data-plasmic-override={overrides.offerVariant2Label}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.offerVariant2Label
                      )}
                    >
                      {(() => {
                        try {
                          return $ctx.fetchDyanamicData.records[0].fields
                            .offer_variant_label2;
                        } catch (e) {
                          if (e instanceof TypeError) {
                            return "Vanilla";
                          }
                          throw e;
                        }
                      })()}
                    </div>
                  </React.Fragment>
                }
                slot3={
                  <div
                    data-plasmic-name={"offerH1"}
                    data-plasmic-override={overrides.offerH1}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.offerH1
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .offer_h1;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "SPECIAL OFFER";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                }
                slot4={
                  <div
                    data-plasmic-name={"offerH2"}
                    data-plasmic-override={overrides.offerH2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.offerH2
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .offer_h2;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "FREE VITAMIN AIR";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                }
                slot5={
                  <div
                    data-plasmic-name={"offerParagraph"}
                    data-plasmic-override={overrides.offerParagraph}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.offerParagraph
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .offer_paragraph;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "Money-Back Guarantee: Better Flavor & Harder Hits or Your Money Back.";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                }
                slot6={
                  <div
                    data-plasmic-name={"offerCta"}
                    data-plasmic-override={overrides.offerCta}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.offerCta
                    )}
                  >
                    {(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .offer_cta;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "CHOOSE FLAVOR";
                        }
                        throw e;
                      }
                    })()}
                  </div>
                }
              >
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__tnund
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  <p.PlasmicImg
                    data-plasmic-name={"offerImage"}
                    data-plasmic-override={overrides.offerImage}
                    alt={""}
                    className={classNames(sty.offerImage)}
                    displayHeight={"423px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={(() => {
                      try {
                        return $ctx.fetchDyanamicData.records[0].fields
                          .offer_image[0].url;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return "https://site-assets.plasmic.app/6187c6867888745d6599b0c2b977be87.svg";
                        }
                        throw e;
                      }
                    })()}
                  />
                </p.PlasmicLink>
              </Offer1>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"products"}
              data-plasmic-override={overrides.products}
              className={classNames(projectcss.all, sty.products)}
            >
              <div className={classNames(projectcss.all, sty.columns___8Eqe)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.column__ynIcq
                  )}
                  component={Link}
                  href={
                    "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/3-pack?variant=31099464122437" as const
                  }
                  platform={"nextjs"}
                >
                  <Collection1
                    className={classNames(
                      "__wab_instance",
                      sty.collection1__tZu7K
                    )}
                    slot9={"$56"}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ko2Cr)}
                      displayHeight={"441px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"387px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/_3PacKsvg.svg",
                        fullWidth: 131,
                        fullHeight: 150,
                        aspectRatio: 0.875566
                      }}
                    />
                  </Collection1>
                  <Collection1Cta
                    className={classNames(
                      "__wab_instance",
                      sty.collection1Cta__ecC9A
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fxJ0C
                      )}
                    >
                      {"SHOP NOW"}
                    </div>
                  </Collection1Cta>
                </p.PlasmicLink>
                {true ? (
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.column__y6H73
                    )}
                    component={Link}
                    href={
                      "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/variety-pack" as const
                    }
                    platform={"nextjs"}
                  >
                    <Collection1
                      className={classNames(
                        "__wab_instance",
                        sty.collection1__kZwcv
                      )}
                      slot={"VARIETY PACK"}
                      slot9={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tav5M
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{"$98 "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF0000" }}
                            >
                              {"+ FREE SHIPPING"}
                            </span>
                          </React.Fragment>
                        </div>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__gl6MS)}
                        displayHeight={"441px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"387px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/varietYsvg.svg",
                          fullWidth: 131,
                          fullHeight: 150,
                          aspectRatio: 0.87471
                        }}
                      />
                    </Collection1>
                    <Collection1Cta
                      className={classNames(
                        "__wab_instance",
                        sty.collection1Cta__zW2X
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0HP5
                        )}
                      >
                        {"SHOP NOW"}
                      </div>
                    </Collection1Cta>
                  </p.PlasmicLink>
                ) : null}
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.column__fBhmB
                  )}
                  component={Link}
                  href={
                    "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/fuel?variant=39394788108" as const
                  }
                  platform={"nextjs"}
                >
                  <Collection1
                    className={classNames(
                      "__wab_instance",
                      sty.collection1__mxQjm
                    )}
                    slot={"FUEL"}
                    slot3={"Energy-Enhancing"}
                    slot9={"$20"}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___0Ee)}
                      displayHeight={"441px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"387px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/fueLsvg.svg",
                        fullWidth: 132,
                        fullHeight: 150,
                        aspectRatio: 0.877551
                      }}
                    />
                  </Collection1>
                  <Collection1Cta
                    className={classNames(
                      "__wab_instance",
                      sty.collection1Cta__t3Mzq
                    )}
                  />
                </p.PlasmicLink>
              </div>
              <div className={classNames(projectcss.all, sty.columns__nbvme)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.column___7Bgoz
                  )}
                  component={Link}
                  href={
                    "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/pure?variant=39394817036" as const
                  }
                  platform={"nextjs"}
                >
                  <Collection1
                    className={classNames(
                      "__wab_instance",
                      sty.collection1__qowBd
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uBbX3
                        )}
                      >
                        {"PURE"}
                      </div>
                    }
                    slot3={"Age-Defying"}
                    slot9={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ucEph
                        )}
                      >
                        {"$20"}
                      </div>
                    }
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__sJnM)}
                      displayHeight={"441px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"387px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/purEsvg.svg",
                        fullWidth: 132,
                        fullHeight: 150,
                        aspectRatio: 0.877551
                      }}
                    />
                  </Collection1>
                  <Collection1Cta
                    className={classNames(
                      "__wab_instance",
                      sty.collection1Cta__sfyju
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xRkar
                      )}
                    >
                      {"SHOP NOW"}
                    </div>
                  </Collection1Cta>
                </p.PlasmicLink>
                {true ? (
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.column__fluph
                    )}
                    component={Link}
                    href={
                      "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/melt?variant=39394868748" as const
                    }
                    platform={"nextjs"}
                  >
                    <Collection1
                      className={classNames(
                        "__wab_instance",
                        sty.collection1__rdEoh
                      )}
                      slot={"MELT"}
                      slot3={"Metabolism-Boosting"}
                      slot9={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___94Ts
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {"$20"}
                            </span>
                          </React.Fragment>
                        </div>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__fkFwK)}
                        displayHeight={"441px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"387px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/melTsvg.svg",
                          fullWidth: 132,
                          fullHeight: 150,
                          aspectRatio: 0.877551
                        }}
                      />
                    </Collection1>
                    <Collection1Cta
                      className={classNames(
                        "__wab_instance",
                        sty.collection1Cta__wViMa
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xcUuv
                        )}
                      >
                        {"SHOP NOW"}
                      </div>
                    </Collection1Cta>
                  </p.PlasmicLink>
                ) : null}
                {true ? (
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.column__eVsSa
                    )}
                    component={Link}
                    href={
                      "https://shop.lifehacksplus.com/discount/QUIT15?redirect=/collections/all/products/fuel?variant=39394788108" as const
                    }
                    platform={"nextjs"}
                  >
                    <Collection1
                      className={classNames(
                        "__wab_instance",
                        sty.collection1__cG1Kh
                      )}
                      slot={"FUEL"}
                      slot3={"Energy-Enhancing"}
                      slot9={"$20"}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__m5Ky0)}
                        displayHeight={"441px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"387px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/copy_of_copy_of_lhp_3_30_23/images/fueLsvg.svg",
                          fullWidth: 132,
                          fullHeight: 150,
                          aspectRatio: 0.877551
                        }}
                      />
                    </Collection1>
                    <Collection1Cta
                      className={classNames(
                        "__wab_instance",
                        sty.collection1Cta__jZrw
                      )}
                    />
                  </p.PlasmicLink>
                ) : null}
              </div>
            </div>
          ) : null}
          {true ? (
            <Collection12
              data-plasmic-name={"collection12"}
              data-plasmic-override={overrides.collection12}
              className={classNames("__wab_instance", sty.collection12)}
            />
          ) : null}
          <CwAdvert2
            data-plasmic-name={"cwAdvert2"}
            data-plasmic-override={overrides.cwAdvert2}
            className={classNames("__wab_instance", sty.cwAdvert2)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "logo2",
    "logo",
    "hiconsH1",
    "hiconsIcon1",
    "hiconsLabel1",
    "hiconsIcon2",
    "hiconsLabel2",
    "hiconsIcon3",
    "hiconsIcon4",
    "hiconsIcon5",
    "hiconsIcon6",
    "offer",
    "offer1",
    "offerImage",
    "offerVariant1Url",
    "offerVariant1Image",
    "offerVariant1Label",
    "offerVariant2Url",
    "offerVariant2Image",
    "offerVariant2Label",
    "offerH1",
    "offerH2",
    "offerParagraph",
    "offerCta",
    "products",
    "collection12",
    "cwAdvert2"
  ],
  logo2: ["logo2"],
  logo: ["logo"],
  hiconsH1: ["hiconsH1"],
  hiconsIcon1: ["hiconsIcon1"],
  hiconsLabel1: ["hiconsLabel1"],
  hiconsIcon2: ["hiconsIcon2"],
  hiconsLabel2: ["hiconsLabel2"],
  hiconsIcon3: ["hiconsIcon3"],
  hiconsIcon4: ["hiconsIcon4"],
  hiconsIcon5: ["hiconsIcon5"],
  hiconsIcon6: ["hiconsIcon6"],
  offer: [
    "offer",
    "offer1",
    "offerImage",
    "offerVariant1Url",
    "offerVariant1Image",
    "offerVariant1Label",
    "offerVariant2Url",
    "offerVariant2Image",
    "offerVariant2Label",
    "offerH1",
    "offerH2",
    "offerParagraph",
    "offerCta"
  ],
  offer1: [
    "offer1",
    "offerImage",
    "offerVariant1Url",
    "offerVariant1Image",
    "offerVariant1Label",
    "offerVariant2Url",
    "offerVariant2Image",
    "offerVariant2Label",
    "offerH1",
    "offerH2",
    "offerParagraph",
    "offerCta"
  ],
  offerImage: ["offerImage"],
  offerVariant1Url: ["offerVariant1Url", "offerVariant1Image"],
  offerVariant1Image: ["offerVariant1Image"],
  offerVariant1Label: ["offerVariant1Label"],
  offerVariant2Url: ["offerVariant2Url", "offerVariant2Image"],
  offerVariant2Image: ["offerVariant2Image"],
  offerVariant2Label: ["offerVariant2Label"],
  offerH1: ["offerH1"],
  offerH2: ["offerH2"],
  offerParagraph: ["offerParagraph"],
  offerCta: ["offerCta"],
  products: ["products"],
  collection12: ["collection12"],
  cwAdvert2: ["cwAdvert2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  logo2: typeof p.PlasmicImg;
  logo: typeof p.PlasmicImg;
  hiconsH1: "div";
  hiconsIcon1: typeof p.PlasmicImg;
  hiconsLabel1: "div";
  hiconsIcon2: typeof p.PlasmicImg;
  hiconsLabel2: "div";
  hiconsIcon3: typeof p.PlasmicImg;
  hiconsIcon4: "div";
  hiconsIcon5: typeof p.PlasmicImg;
  hiconsIcon6: "div";
  offer: "div";
  offer1: typeof Offer1;
  offerImage: typeof p.PlasmicImg;
  offerVariant1Url: "a";
  offerVariant1Image: typeof p.PlasmicImg;
  offerVariant1Label: "div";
  offerVariant2Url: "a";
  offerVariant2Image: typeof p.PlasmicImg;
  offerVariant2Label: "div";
  offerH1: "div";
  offerH2: "div";
  offerParagraph: "div";
  offerCta: "div";
  products: "div";
  collection12: typeof Collection12;
  cwAdvert2: typeof CwAdvert2;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCollection6__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCollection6__VariantsArgs;
    args?: PlasmicCollection6__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicCollection6__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicCollection6__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicCollection6__ArgProps,
          internalVariantPropNames: PlasmicCollection6__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCollection6__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCollection6";
  } else {
    func.displayName = `PlasmicCollection6.${nodeName}`;
  }
  return func;
}

export const PlasmicCollection6 = Object.assign(
  // Top-level PlasmicCollection6 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    logo2: makeNodeComponent("logo2"),
    logo: makeNodeComponent("logo"),
    hiconsH1: makeNodeComponent("hiconsH1"),
    hiconsIcon1: makeNodeComponent("hiconsIcon1"),
    hiconsLabel1: makeNodeComponent("hiconsLabel1"),
    hiconsIcon2: makeNodeComponent("hiconsIcon2"),
    hiconsLabel2: makeNodeComponent("hiconsLabel2"),
    hiconsIcon3: makeNodeComponent("hiconsIcon3"),
    hiconsIcon4: makeNodeComponent("hiconsIcon4"),
    hiconsIcon5: makeNodeComponent("hiconsIcon5"),
    hiconsIcon6: makeNodeComponent("hiconsIcon6"),
    offer: makeNodeComponent("offer"),
    offer1: makeNodeComponent("offer1"),
    offerImage: makeNodeComponent("offerImage"),
    offerVariant1Url: makeNodeComponent("offerVariant1Url"),
    offerVariant1Image: makeNodeComponent("offerVariant1Image"),
    offerVariant1Label: makeNodeComponent("offerVariant1Label"),
    offerVariant2Url: makeNodeComponent("offerVariant2Url"),
    offerVariant2Image: makeNodeComponent("offerVariant2Image"),
    offerVariant2Label: makeNodeComponent("offerVariant2Label"),
    offerH1: makeNodeComponent("offerH1"),
    offerH2: makeNodeComponent("offerH2"),
    offerParagraph: makeNodeComponent("offerParagraph"),
    offerCta: makeNodeComponent("offerCta"),
    products: makeNodeComponent("products"),
    collection12: makeNodeComponent("collection12"),
    cwAdvert2: makeNodeComponent("cwAdvert2"),

    // Metadata about props expected for PlasmicCollection6
    internalVariantProps: PlasmicCollection6__VariantProps,
    internalArgProps: PlasmicCollection6__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Meet The Newest Flavor Diffuser",
      description: "Here's how to claim a free device!",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCollection6;
/* prettier-ignore-end */
